[versions]
agp = "8.9.0" # https://developer.android.com/build/releases/gradle-plugin

# compose
composeBom = "2025.04.01"
compose-material3 = "1.3.2"

# multiplatform
kotlin = "2.1.20"
coroutines = "1.10.2" # https://github.com/Kotlin/kotlinx.coroutines
serialization = "1.8.1" # https://github.com/Kotlin/kotlinx.serialization
immutable = "0.3.8" # https://github.com/Kotlin/kotlinx.collections.immutable
datetime = "0.6.2" # https://github.com/Kotlin/kotlinx-datetime
sqlDelight = "2.0.2" # https://github.com/cashapp/sqldelight
settings = "1.3.0" # https://github.com/russhwolf/multiplatform-settings
ktor = "3.1.2" # https://github.com/ktorio/ktor
koin = "4.0.4" # https://github.com/InsertKoinIO/koin
koin-annotations = "2.0.0" # https://github.com/InsertKoinIO/koin
buildKonfig = "0.17.1" # https://github.com/yshrsmz/BuildKonfig
ksp = "2.1.20-2.0.1"

# androidx https://developer.android.com/jetpack/androidx/versions
androidx-lifecycle = "2.9.0-rc01"

androidx-activityCompose = "1.10.1"
androidx-fragmentCompose = "1.8.6"
androidx-splashscreen = "1.0.1"

coil = "3.1.0" # https://github.com/coil-kt/coil

jwt = "1.1.0"
napier = "2.7.1"

firebase-bom = "33.12.0" # https://firebase.google.com/docs/android/learn-more#bom
googleService = "4.4.2"
crashlytics = "3.0.3"

# testing
mockk = "1.14.0"
kotlinStdlib = "2.1.20"
runner = "1.6.2"
core = "1.6.1"
junit = "1.2.1" # https://github.com/mockk/mockk

[libraries]
com-android-library = { module = "com.android.library:com.android.library.gradle.plugin", version.ref = "agp" }
com-google-devtools-ksp-gradle-plugin = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-fragment-compose = { module = "androidx.fragment:fragment-compose", version.ref = "androidx-fragmentCompose" }

androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }

androidx-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "androidx-splashscreen" }
androidx-ui-icons = { module = "androidx.compose.material:material-icons-extended" }

compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-runtime = { module = "androidx.compose.runtime:runtime" }
compose-foundation = { module = "androidx.compose.foundation:foundation" }
compose-animation = { module = "androidx.compose.animation:animation" }

compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
compose-material-icons-core = { module = "androidx.compose.material:material-icons-core" }
compose-material-icons-ext = { module = "androidx.compose.material:material-icons-extended" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "immutable" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }

kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-mock-jvm = { module = "io.ktor:ktor-client-mock-jvm", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" } # ios
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" } # android
okhttp3-logging-interceptor = "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.14" # android

coilCompose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coilSvg = { module = "io.coil-kt.coil3:coil-svg", version.ref = "coil" }
coil = { module = "io.coil-kt.coil3:coil", version.ref = "coil" }

koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koin-annotations" }
koin-compiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koin-annotations" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-compose-vm = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }
multiplatform-settings-serialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "settings" }

org-jetbrains-kotlin-multiplatform-gradle-plugin = { module = "org.jetbrains.kotlin.multiplatform:org.jetbrains.kotlin.multiplatform.gradle.plugin", version.ref = "kotlin" }
org-jetbrains-kotlin-plugin-serialization-gradle-plugin = { module = "org.jetbrains.kotlin.plugin.serialization:org.jetbrains.kotlin.plugin.serialization.gradle.plugin", version.ref = "kotlin" }
sqldelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqldelight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqldelight-sqlite-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqldelight-sqlite-adapter = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqlDelight" }
sqldelight-coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }

# firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-config = { module = "com.google.firebase:firebase-config" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }
firebase-performance = { module = "com.google.firebase:firebase-perf" }

jwt-parser = { module = "com.appstractive:jwt-kt", version.ref = "jwt" }

napier = { module = "io.github.aakira:napier", version.ref = "napier" }

mockk-jvm = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlinStdlib" }
androidx-runner = { group = "androidx.test", name = "runner", version.ref = "runner" }
androidx-core = { group = "androidx.test", name = "core", version.ref = "core" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junit" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp"}
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
buildKonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildKonfig" }
googleService = { id = "com.google.gms.google-services", version.ref = "googleService" }
crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "crashlytics" }
android-kotlin-multiplatform-library = { id = "com.android.kotlin.multiplatform.library", version.ref = "agp" }

[bundles]
ktorClientCommon = [
    "ktor-client-core",
    "ktor-client-content-negotiation",
    "ktor-client-serialization",
    "ktor-client-logging",
]
